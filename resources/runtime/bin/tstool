#!/bin/sh
#
# Script to run TSTool on UNIX
# Set the INSTALL_HOME to the main installation folder.
# Set the JAVA_EXE to the "java" program that is the Java Runtime Environment
#

# Installation home for TSTool, under which will be bin, logs, system, etc.
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
INSTALL_HOME="$SCRIPT_DIR/.."

# Location of Java runtime environment
# Typical Linux install (JRE distributed with TSTool)...
JRE_HOME="$INSTALL_HOME/jre_16"
JAVA_EXE="$JRE_HOME/bin/java"
# Or, use the one on the operating system (must be 1.6+)...
# Use this by default for Mac OS X
if [[ "$(uname)" == "Darwin" ]]
then
    JAVA_EXE="/usr/bin/java"
fi

# ------- Below this should not normally need to edit -------

# Indicate where the JAR files live.
JAR_HOME="$INSTALL_HOME/bin"
# Classpath for TSTool, including all Jar files needed for runtime features
# List core files first for rapid access with less used features later.
TSTOOL_CP="\
$JAR_HOME/TSTool_16.jar:\
$JAR_HOME/cdss.domain_16.jar:\
$JAR_HOME/HydroBaseDMI_16.jar:\
$JAR_HOME/NWSRFS_DMI_16.jar:\
$JAR_HOME/RiversideDB_DMI_16.jar:\
$JAR_HOME/RTi_Common_16.jar:\
$JAR_HOME/SatmonSysDMI_16.jar:\
$JAR_HOME/StateMod_16.jar:\
$JAR_HOME/TSCommandProcessor_16.jar:\
$JAR_HOME/hec.jar:\
$JAR_HOME/heclib.jar:\
$JAR_HOME/rma.jar:\
$JAR_HOME/Blowfish_142.jar:\
$JAR_HOME/h2.jar:\
$JAR_HOME/freemarker.jar:\
$JAR_HOME/jcommon.jar:\
$JAR_HOME/jfreechart.jar:\
$JAR_HOME/jsr173_1.0_api.jar:\
$JAR_HOME/jython.jar:\
$JAR_HOME/libXMLJava.jar:\
$JAR_HOME/msbase.jar:\
$JAR_HOME/mssqlserver.jar:\
$JAR_HOME/msutil.jar:\
$JAR_HOME/batik-awt-util.jar:\
$JAR_HOME/batik-dom.jar:\
$JAR_HOME/batik-ext.jar:\
$JAR_HOME/batik-svggen.jar:\
$JAR_HOME/batik-util.jar:\
$JAR_HOME/xbean.jar:\
$JAR_HOME/xerces.jar:\
$JAR_HOME/commons-net-1.2.2.jar:\
$JAR_HOME/jakarta-oro-2.0.8.jar:\
$JAR_HOME/com.noelios.restlet.jar:\
$JAR_HOME/org.restlet.jar:\
$JAR_HOME/ojdbc6.jar:\
$JAR_HOME/sqljdbc4.jar:\
$JAR_HOME/gson-1.6.jar:\
"

# If TSTool is running out of memory, increase the -Xmx option below
# (maximum megabytes of memory allowed for TSTool).  This seems to go up to 
# about 1200mx maximum on 32bit operating systems.
#
# If graphics misbehave, try using the following:
#  -Dsun.java2d.noddraw=true
#
# If http traffic is routed through a proxy, use the following to use the
# system proxy settings automatically so that web services work
# (actually this is an OK default):
#  -Djava.net.useSystemProxies=true
#
JAVA_COMMAND="$JAVA_EXE -Xmx1024m -Djava.net.useSystemProxies=true"

# Checks to confirm the configuration...
# Verify that the installation folder exists
if [ ! -d "$INSTALL_HOME" ]
    then
    echo ""
    echo "Configured INSTALL_HOME=$INSTALL_HOME folder does not exist."
    echo ""
    exit 1
fi
# Verify that an expected software file exists
if [ ! -e "$INSTALL_HOME/bin/TSTool_16.jar" ]
    then
    echo ""
    echo "Configured INSTALL_HOME=$INSTALL_HOME does not seem correct."
    echo "Unable to find bin/TSTool_16.jar in this folder."
    echo ""
    exit 1
fi

# Run TSTool, passing up to 9 command line parameters.
command="$JAVA_COMMAND -classpath $TSTOOL_CP rti.app.tstool.TSTool -home $INSTALL_HOME $1 $2 $3 $4 $5 $6 $7 $8 $9"
# Uncomment for troubleshooting...
# echo $command
# Run it...
$command
