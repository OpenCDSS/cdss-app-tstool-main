<project name="CDSS" default="compile" basedir="../">
    <!-- Targets used to create CDSS version of TSTool. -->
    <!-- 'build.xml' is not used in this case. -->
    
    <import file="../../cdss-util-buildtools/common-build.xml"/>
    <import file="../../cdss-util-buildtools/common-doc.xml"/>
    <import file="../../cdss-util-buildtools/common-installer.xml"/>
    
    <property file="conf/product-cdss.properties"/>
	
    <!-- This is called after standard-local-install and allows common resources to be copied in. -->
	<!-- Also need to make sure that externals/CDSS/installer/cdss.nsh includes all the folders consistent with below. -->
    <target name="-install-local">
    	<!-- List folders and files alphabetically. -->

    	<!-- Top-level installation folder - folder should already exist. -->

    	<copy todir="${install.dir}" file="resources/runtime/README.md"/>

    	<!-- bin - run-time binary files. -->
    	<!-- Copy files from bin and bin-CDSS. -->

        <copy todir="${install.dir}/bin" file="resources/runtime/bin-CDSS/TSTool.bat"/>
    	<copy todir="${install.dir}/bin" file="resources/runtime/bin-CDSS/tstool-windows.cmd"/>
    	<copy todir="${install.dir}/bin" file="resources/runtime/bin/README.md"/>
    	<copy todir="${install.dir}/bin" file="resources/runtime/bin/tstool-latest.bat"/>
        <copy todir="${install.dir}/bin" file="installer/common/TSTool.l4j.ini"/>
    	<!-- The following is a useful utility to help create a Linux distribution from a Windows distribution -->
        <copy todir="${install.dir}/bin" file="resources/runtime/bin/build-linux-distro.bash"/>
    	<!-- Scripts to build and run TSTool on Linux -->
    	<copy todir="${install.dir}/bin" file="resources/runtime/bin/build-linux-distro.bash"/>
    	<copy todir="${install.dir}/bin" file="resources/runtime/bin/setup-linux-tstool.bash"/>
    	<copy todir="${install.dir}/bin" file="resources/runtime/bin/tstool"/>
    	<!-- Binary files needed for HEC-DSS support beyond the jar files, which are handled automatically. -->
    	<!-- As of TSTool 14.4.0 use the following. -->
    	<!-- Prior to TSTool 14.4.0 use the following. -->
    	<copy todir="${install.dir}/bin" file="../cdss-lib-processor-ts-java/lib/heclib/javaHeclib.dll"/>
    	<!--
    	<copy todir="${install.dir}/bin" file="../cdss-lib-processor-ts-java/lib/heclib/javaHeclib.dll"/>
    	<copy todir="${install.dir}/bin" file="../cdss-lib-processor-ts-java/lib/heclib/rmaUtil.dll"/>
    	<copy todir="${install.dir}/bin" file="../cdss-lib-processor-ts-java/lib/heclib/DFORMDD.DLL"/>
    	<copy todir="${install.dir}/bin" file="../cdss-lib-processor-ts-java/lib/heclib/MSVCRTD.DLL"/>
    	-->

    	<!-- datastores - datastore configuration files -->

    	<mkdir dir="${install.dir}/datastores"/>
    	<copy todir="${install.dir}/datastores" file="resources/runtime/datastores/HydroBase.cfg"/>
    	<copy todir="${install.dir}/datastores" file="resources/runtime/datastores/HydroBaseWeb.cfg"/>
    	<copy todir="${install.dir}/datastores" file="resources/runtime/datastores/NrcsAwdb.cfg"/>
    	<copy todir="${install.dir}/datastores" file="resources/runtime/datastores/README.md"/>
    	<copy todir="${install.dir}/datastores" file="resources/runtime/datastores/RCC-ACIS.cfg"/>
        <copy todir="${install.dir}/datastores" file="resources/runtime/datastores/UsgsNwisDaily.cfg"/>
    	<copy todir="${install.dir}/datastores" file="resources/runtime/datastores/UsgsNwisGroundwater.cfg"/>
    	<copy todir="${install.dir}/datastores" file="resources/runtime/datastores/UsgsNwisInstantaneous.cfg"/>

    	<!-- doc - documentation (include simple README file to direct to online documentation) -->

    	<mkdir dir="${install.dir}/doc"/>
        <copy todir="${install.dir}/doc" file="resources/runtime/doc/README.md"/>

    	<!-- Training examples are distributed with the software: -->
    	<!-- Previously was copied from ../cdss-app-tstool-doc but these are out of date by 10 years. -->
    	<!-- Now copy from the training repository and also have PDF and mp4 online. -->
    	<!-- TODO smalers 2021-12-19 Might need to exclude other files and folders to avoid packaging unnecessary files. -->
    	<!--   For example, some training examples might use DateValue *.dv files as input whereas others create as output. -->
    	<!--   Maybe need to have a script that cleans the training folders before building the installer? -->
    	<mkdir dir="${install.dir}/doc/training"/>
    	<copy todir="${install.dir}/doc/training">
    		<fileset dir="../cdss-app-tstool-training-user/training">
    			<include name="**/*.*"/>
    			<exclude name="**/*.chk"/>
    			<exclude name="**/*.log"/>
    			<exclude name="**/*.check.html"/>
    			<exclude name="**/*.mp4"/>
    			<exclude name="**/*.ppt"/>
    			<exclude name="**/*.pptx"/>
    			<exclude name="**/*video-script*"/>
    			<exclude name="**/images/**"/>
    			</fileset>
    		</copy>

    	<!-- examples - examples -->

    	<mkdir dir="${install.dir}/examples"/>
        <copy todir="${install.dir}/examples">
        	<fileset dir="resources/runtime/examples">
        		<include name="**/*.*"/>
    			<exclude name="README-dev.md"/>
        		</fileset>
        	</copy>

    	<!-- logs - log file folder -->
    	<!-- Just copy the README file to explain the folder. -->

    	<mkdir dir="${install.dir}/logs"/>
        <copy todir="${install.dir}/logs" file="resources/runtime/logs/README.md"/>

    	<!-- plugins - plugins folder -->
    	<!-- Just copy the README file to explain the folder. -->

    	<mkdir dir="${install.dir}/plugins"/>
        <copy todir="${install.dir}/plugins" file="resources/runtime/plugins/README.md"/>

    	<!-- python - Python scripts that utilize TSTool -->

    	<mkdir dir="${install.dir}/python/nrcs-snotel"/>
    	<copy todir="${install.dir}/python" file="resources/runtime/python/README.md"/>
    	<copy todir="${install.dir}/python/nrcs-snotel" file="resources/runtime/python/nrcs-snotel/download-snotel.bat"/>
    	<copy todir="${install.dir}/python/nrcs-snotel" file="resources/runtime/python/nrcs-snotel/download-snotel.py"/>
    	<copy todir="${install.dir}/python/nrcs-snotel" file="resources/runtime/python/nrcs-snotel/download-snotel.doc"/>
    	<copy todir="${install.dir}/python/nrcs-snotel" file="resources/runtime/python/nrcs-snotel/TSlite.py"/>
    	<mkdir dir="${install.dir}/python/nrcs-snowcourse"/>
    	<copy todir="${install.dir}/python/nrcs-snowcourse" file="resources/runtime/python/nrcs-snowcourse/snowcourse2csv.py"/>
    	<mkdir dir="${install.dir}/python/table"/>
    	<copy todir="${install.dir}/python/table">
    		<fileset dir="resources/runtime/python/table">
    			<include name="*.py"/>
    			</fileset>
    		</copy>

    	<!-- System (configuration) files -->
    	<!-- Copy files from system and system-CDSS. -->

    	<copy todir="${install.dir}/system" file="resources/runtime/system/ClimateDivisions.csv"/>
        <copy todir="${install.dir}/system" file="resources/runtime/system/DATAUNIT"/>
    	<copy todir="${install.dir}/system" file="resources/runtime/system/FIPS-county.csv"/>
    	<copy todir="${install.dir}/system" file="resources/runtime/system/FIPS-state.csv"/>
    	<copy todir="${install.dir}/system" file="resources/runtime/system/README.md"/>
    	<copy todir="${install.dir}/system" file="resources/runtime/system-CDSS/TSTool.cfg"/>
    	<!-- System configuration file for CDSS.cfg included because HydroBase may be enabled -->
        <copy todir="${install.dir}/system" file="resources/runtime/system-CDSS/CDSS.cfg"/>

    </target>

</project>
