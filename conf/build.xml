<!-- TSTool build file 
	Author  :  Kurt Tometich
	Date    :  10/30/2006 			
-->

<project name="buildTemplate" basedir="../" default="compile">

	<!-- set the javac location for OS type -->
	<condition property="executable" value="/home/sharedLibs/j2sdk1.4.2_12/bin/javac">
		<and>
	       	<os family="unix" />
		</and>
	</condition>
	<condition property="executable" value="S:\develop\jdk_142\bin\javac">
		<and>
	       	<os family="windows" />
		</and>
	</condition>
		
	<!--============= General Properties =============-->
	<property name="src.dir"	     location="src"         />
	<property name="build.dir"	     location="build"       />
	<property name="dist.dir"        location="dist" />
	<property name="doc.dir"		 location="doc" />
	<property name="buildwork.dir"   location="build/work"   />
	<property name="buildtest.dir"   location="build/test"      />
	<property name="test.dir"	     location="test/unit/src"        />
	<property name="CDSS_OP.dir"     location="test/operational/CDSS" />
	<property name="RTi_OP.dir"      location="test/operational/Rivertrack" />
	<property name="jdoc.dir"	     location="doc/javadoc" />
	<property name="ext.dir"         location="externals"       />
	<property name="graphics.dir"    location="graphics"        />
	<property name="system.dir"  	 location="test/system"        />
	<property name="logs.dir"    	 location="test/logs"        />
	<property name="package"     	 value="DWR/DMI/tstool" />
	<property name="nsis.dir"		 location="installer" />
	<property name="executable"  	 location="S:/develop/jdk_150/bin/javac" />
	<property name="classname"   	 value="DWR.DMI.tstool.tstool" />
	<property name="testSuite"  	 value="DWR.DMI.tstool.tstoolTestSuite" />
	<property name="jarfname"    	 value="TSTool_142.jar" />
	<property name="unitTest.dir"	 location="test/unit" />
	<property name="regTest.dir"	 location="test/regression" />
	<property name="command_file"    value="Regression.TSTool" />
	<property name="proj_name"		 value="TSTool" />
	<property name="costello" 		 value="abbot.editor.Costello" />
	<property name="AbbotSuite"		 value="AbbotTestSuite" />
	<property name="cobertura.dir"   value="${ext.dir}/cobertura" />
	<property name="buildcob.dir"    value="build/cobertura" />
	<property name="CDSS_install.dir" location="installer/CDSS" />
	<property name="RTi_install.dir" location="installer/Rivertrack" />
	<property name="NWSRFS_install.dir" location="installer/NWSRFS" />
	<property name="ProductTester" 	 value="${ext.dir}/ProductTester" />
	<property name="nativejc"		 
		value="${ext.dir}/NativeJ/nativejc.exe" />
	<property name="NJProj"			 value="${proj_name}.njp" />
	<property name="NJProj_Reg"	 	 value="${proj_name}_Regression.njp" />
	<property name="NJProj_Reg_Ext"  value="${proj_name}_Ext_Regression.njp" />
	
	<path id="cobertura.classpath">
	    <fileset dir="${cobertura.dir}">
	        <include name="cobertura.jar" />
	        <include name="lib/**/*.jar" />
	    </fileset>
	</path>
   
	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
	
	
	<!--================ Dependencies ==================-->
	<property name="hydro"	 
		value="${ext.dir}/HydroBaseDMI/HydroBaseDMI_142.jar" />
	<property name="msbase"	 
		value="${ext.dir}/Microsoft_SQL_Server_Java_ODBC_Driver/msbase.jar" />
	<property name="mssqlserver"	 
			value="${ext.dir}/Microsoft_SQL_Server_Java_ODBC_Driver/mssqlserver.jar" />
	<property name="msutil"	 
			value="${ext.dir}/Microsoft_SQL_Server_Java_ODBC_Driver/msutil.jar" />
	<property name="NWSRFS_DMI"	 
		value="${ext.dir}/NWSRFS_DMI/NWSRFS_DMI_142_Extended.jar" />
	<property name="RiversideDB"	 
		value="${ext.dir}/RiversideDB_DMI/RiversideDB_DMI_142.jar" />
	<property name="RTi_Common"	 
		value="${ext.dir}/RTi_Common/RTi_Common_142.jar" />
	<property name="StateCU"	 
		value="${ext.dir}/StateCU/StateCU_142.jar" />
	<property name="StateMod"	 
		value="${ext.dir}/StateMod/StateMod_142.jar" />
	<property name="TS_Services"
		value="${ext.dir}/TS_Services/TS_Services.jar" />
	<property name="Satmon"	 
			value="${ext.dir}/SatmonSysDMI/SatmonSysDMI_142.jar" />
	<property name="junit"
		value="${ext.dir}/junit.jar" />
	<property name="blowfish"
		value="${ext.dir}/Blowfish_142.jar" />
	<property name="TSCommandProc"
		value="${ext.dir}/TSCommandProcessor/TSCommandProcessor_142.jar" />
	
	<!-- Abbot jar files -->
	<property name="Abbot.jar" 
		value="externals/Abbot/abbot.jar" />
	<property name="jdom.jar" 
		value="externals/Abbot/jdom.jar" />
	<property name="xerces.jar" 
		value="externals/Abbot/xerces.jar" />
	<property name="xml-apis.jar" 
			value="externals/Abbot/xml-apis.jar" />
	<property name="jgraph.jar" 
		value="externals/Abbot/jgraph.jar" />
	<property name="bsh.jar" 
		value="externals/Abbot/bsh.jar" />
	<property name="MRJ.zip" 
			value="externals/Abbot/MRJToolkitStubs.zip" />
	<property name="gnu-regexp.jar" 
				value="externals/Abbot/gnu-regexp.jar" />
	<property name="ant4eclipse.jar" 
		value="externals/Abbot/ant4eclipse.jar" />
	
	<!-- =========== Compiler Properties ===============-->
	<property name="compiler" value="modern" />
	

	<!-- set classpath -->
	<path id="classpath">
		<pathelement location="${junit}" />
		<pathelement location="${buildcob.dir}" />
		<pathelement location="${buildwork.dir}"/>
		<pathelement location="${buildtest.dir}" />
		<pathelement location="${hydro}"/>
		<pathelement location="${msbase}"/>
		<pathelement location="${mssqlserver}"/>
		<pathelement location="${msutil}"/>
		<pathelement location="${NWSRFS_DMI}"/>
		<pathelement location="${RiversideDB}"/>
		<pathelement location="${RTi_Common}"/>
		<pathelement location="${StateCU}"/>
		<pathelement location="${StateMod}"/>
		<pathelement location="${TS_Services}"/>
		<pathelement location="${Satmon}"/>
		<pathelement location="${Abbot.jar}" />
		<pathelement location="${buildtest.dir}" />
		<pathelement location="${jdom.jar}" />
		<pathelement location="${xerces.jar}" />
		<pathelement location="${xml-apis.jar}" />
		<pathelement location="${bsh.jar}" />
		<pathelement location="${jgraph.jar}" />
		<pathelement location="${MRJ.zip}" />
		<pathelement location="${gnu-regexp.jar}" />
		<pathelement location="${ant4eclipse.jar}" />
		<pathelement location="${blowfish}" />
		<pathelement location="${TSCommandProc}" />
		<pathelement location="."/>
	</path>
	
	<path id="classpathOp">
		<pathelement location="${hydro}"/>
		<pathelement location="${msbase}"/>
		<pathelement location="${mssqlserver}"/>
		<pathelement location="${msutil}"/>
		<pathelement location="${NWSRFS_DMI}"/>
		<pathelement location="${RiversideDB}"/>
		<pathelement location="${RTi_Common}"/>
		<pathelement location="${StateCU}"/>
		<pathelement location="${StateMod}"/>
		<pathelement location="${TS_Services}"/>
		<pathelement location="${Satmon}"/>
		<pathelement location="${blowfish}" />
		<pathelement location="${junit}" />
		<pathelement location="${Abbot.jar}" />
		<pathelement location="${buildtest.dir}" />
		<pathelement location="${jdom.jar}" />
		<pathelement location="${xerces.jar}" />
		<pathelement location="${xml-apis.jar}" />
		<pathelement location="${bsh.jar}" />
		<pathelement location="${jgraph.jar}" />
		<pathelement location="${MRJ.zip}" />
		<pathelement location="${gnu-regexp.jar}" />
		<pathelement location="${ant4eclipse.jar}" />
		<pathelement location="${dist.dir}/${jarfname}" />
		<pathelement location="${TSCommandProc}" />
		<pathelement location="."/>
	</path>
	
	<!-- current timestamp -->
	<tstamp>
	  <format property="TODAY" pattern="MM/dd/yyyy hh:mm" locale="en"/> 	
  	  <format property="jarDate" pattern="yyyy-MM-dd hh:mm" locale="en" />
	</tstamp>
	
<!-- calls product tester ant file -->
<macrodef name="addTestsToSet">
	<attribute name="dataset" />
	<sequential>
		<ant antfile="${ext.dir}/RTiBuild/product-tester.xml"
			target="addTestsToSet">
			<property name="reg_dataset" value="@{dataset}"/>
		</ant>
	</sequential>
</macrodef>

<!-- calls product tester ant file -->
<macrodef name="buildProdTesterWindows">
	<attribute name="dataset" />
	<sequential>
		<ant antfile="${ext.dir}/RTiBuild/product-tester.xml" 
			 target="buildProdTesterWindows">
			<property name="reg_dataset" value="@{dataset}"/>
		</ant>
	</sequential>
</macrodef>
	
<!-- calls product tester ant file -->
<macrodef name="buildProdTesterLinux">
	<attribute name="dataset" />
	<sequential>
		<ant antfile="${ext.dir}/RTiBuild/product-tester.xml" 
			 target="buildProdTesterLinux">
			<property name="reg_dataset" value="@{dataset}"/>
		</ant>
	</sequential>
</macrodef>
	
<!-- several targets for building product testers for Windows -->
<target name="buildWinProdTester_All" >
	<addTestsToSet dataset="CDSS"/>
	<addTestsToSet dataset="general"/>
	<addTestsToSet dataset="Rivertrak"/>
	<buildProdTesterWindows dataset="CDSS_RioGrande" />
</target>
	
<target name="buildWinProdTester_CDSS" >
	<buildProdTesterWindows dataset="CDSS" />
</target>
	
<target name="buildWinProdTester_General" >
	<buildProdTesterWindows dataset="general" />
</target>
	
<target name="buildWinProdTester_Rivertrak" >
	<buildProdTesterWindows dataset="Rivertrak" />
</target>
	
<target name="buildWinProdTester_CDSS_RioGrande" >
	<buildProdTesterWindows dataset="CDSS_RioGrande" />
</target>
	
<target name="buildWinProdTester_CDSS_UpperColorado_200701" >
	<buildProdTesterWindows dataset="CDSS_UpperColorado_200701" />
</target>	
	
<!--========================================================-->
	
<!-- several targets for building product testers for Linux -->
<target name="buildLinuxProdTester_All" >
	<addTestsToSet dataset="CDSS"/>
	<addTestsToSet dataset="general"/>
	<addTestsToSet dataset="Rivertrak"/>
	<buildProdTesterLinux dataset="CDSS_RioGrande" />	
</target>	
	
<target name="buildLinuxProdTester_CDSS" >
	<buildProdTesterLinux dataset="CDSS" />
</target>
<target name="buildLinuxProdTester_General" >
	<buildProdTesterLinux dataset="general" />
</target>
<target name="buildLinuxProdTester_Rivertrak" >
	<buildProdTesterLinux dataset="Rivertrak" />
</target>
<target name="buildLinuxProdTester_CDSS_RioGrande" >
	<buildProdTesterLinux dataset="CDSS_RioGrande" />
</target>
	
<target name="buildLinuxProdTester_CDSS_UpperColorado_200701" >
	<buildProdTesterLinux dataset="CDSS_UpperColorado_200701" />
</target>	
<!--=======================================================-->
	
<target name="clean" description="removes compiled files">
	
	<!-- delete build stuff -->
	<delete dir="${buildwork.dir}" />
	<delete dir="${build.dir}" />
	<delete dir="tmp" />
	<!--<delete dir="${buildcob.dir)" />-->

	<!-- delete javadoc stuff -->
	<delete dir="${jdoc.dir}" />
		
	<!-- delete the Setup.exe files made from NSIS -->
	<delete file="installer/CDSS/TSTool_*_Setup.exe" />
	
	<delete includeEmptyDirs="true">
		<fileset dir="${dist.dir}" />
		<fileset dir="test/unit/results" />
		<fileset dir="test/operational/results" />
		<fileset dir="test/regression/results" />
		<fileset dir="test/operational/CDSS/logs" />
		<fileset dir="test/operational/Rivertrack/logs" />
		<fileset dir="${CDSS_install.dir}" includes="**/*.exe" />
		<fileset dir="${RTi_install.dir}" includes="**/*.exe" />
	</delete>
	
	<delete dir="test/unit/results/css" />
	<delete dir="test/unit/results/images" />
	<delete dir="test/unit/results/js" />
	<delete dir="test/output" />
	<delete dir="Release" />
	
</target>

<target name="compile" description="compiles source code to build/work">
	
	<mkdir dir="${buildwork.dir}" />
	
	<javac srcdir 		= "${src.dir}"
           destdir 		= "${buildwork.dir}"
		   classpathref = "classpath"
           debug 		= "on"
	       fork 		= "yes"
	       listfiles 	= "true"
	       deprecation 	= "true"
	       executable 	= "${executable}"
	       compiler 	= "${compiler}"
	/>
	
</target>

<target name="compileTest" depends="compile"
 description="compiles all test source code into build/test dir">

	<mkdir dir="${build.dir}/test" />
	<javac srcdir 		= "${test.dir}"
	       destdir 	    = "${build.dir}/test"
           classpathref = "classpath"
           debug 		= "on"
	       fork 		= "yes"
	       listfiles 	= "true"
	       deprecation 	= "true"
	       executable 	= "${executable}"
	       compiler 	= "${compiler}"
	/>

</target>

<target name="createAllInstallers" 
 description="creates the NSIS installers for CDSS and RTi">
	
	<antcall target="createInstaller_CDSS" />
	<antcall target="createInstaller_RTi" />
	<antcall target="createInstaller_RTiExtended" />
	
</target>

<target name="createAppExe_CDSS" 
 description="creates CDSS application executables">
	
	<ant antfile="${ext.dir}/RTiBuild/common-install.xml"
		 target="createAppExe" >
		<property name="NJProj.dir" value="${nsis.dir}/CDSS" />
		<property name="NJProj" value="${NJProj_Reg}" />
	</ant>
	
</target>
	
<target name="createAppExe_RTi" 
 description="builds RTi application executables" >
		
	<ant antfile="${ext.dir}/RTiBuild/common-install.xml"
		 target="createAppExe" >
		<property name="NJProj.dir" value="${nsis.dir}/Rivertrack" />
		<property name="NJProj" value="${NJProj_Reg}" />
	</ant>
	
	<!-- build the extended RTi exe -->
	<ant antfile="${ext.dir}/RTiBuild/common-install.xml"
		target="createAppExe" >
		<property name="NJProj.dir" value="${nsis.dir}/Rivertrack" />
		<property name="NJProj" value="${NJProj_Reg_Ext}" />
	</ant>
		
</target>
	
<target name="createInstaller_CDSS" depends="clean,jar" 
	description="runs NSIS to create an executable installer">
	
	<ant antfile="${ext.dir}/RTiBuild/common-install.xml" 
	 target="createNJandNSIS" >
		<property name="NJProj.dir" value="${nsis.dir}/CDSS" />
		<property name="nsis.script" value="TSTool.nsi" />
	</ant>
	
</target>
	
<target name="createInstaller_RTi" depends="clean,jar"
	description="runs NSIS to create an executable installer">
	
	<ant antfile="${ext.dir}/RTiBuild/common-install.xml" 
	 target="createNJandNSIS" >
		<property name="NJProj.dir" value="${nsis.dir}/Rivertrack" />
		<property name="nsis.script" value="TSTool.nsi" />
	</ant>
	
</target>
	
<target name="createInstaller_RTiExtended"
	description="runs NSIS to create an executable installer">
	
	<property name="NJProj" value="${NJProj_Reg_Ext}" />
	<antcall target="createInstaller_RTi" />
	
</target>
		
<target name="createRelease" 
 depends="clean,test,javadoc,createAllInstallers"
 description="creates files and folders needed for release">

	<!-- make a temp directory (Release) and copy all
	     release specific files and docs here -->
	<mkdir dir="Release" />
	<mkdir dir="Release/javadoc" />
	<mkdir dir="Release/testResults" />
	<mkdir dir="Release/testResults/unit" />
	<mkdir dir="Release/testResults/regression" />
	
	<!-- CDSS -->
	<mkdir dir="Release/TSTool_CDSS" />
	<mkdir dir="Release/TSTool_CDSS/doc" />
	<mkdir dir="Release/TSTool_CDSS/installer" />
	
	<!-- move CDSS files and docs -->
	<move todir="Release/TSTool_CDSS/installer" >
		<fileset dir="${CDSS_install.dir}" includes="**/*Setup.exe" />
	</move>
	<copy todir="Release/TSTool_CDSS/doc" >
		<fileset dir="doc/TSTool/CDSS" />
	</copy>
	
	<!-- RiverTrak -->
	<mkdir dir="Release/TSTool_RiverTrak" />
	<mkdir dir="Release/TSTool_RiverTrak/doc" />
	<mkdir dir="Release/TSTool_RiverTrak/installer" />

	<!-- move RiverTrak files and docs -->
	<move todir="Release/TSTool_RiverTrak/installer" >
		<fileset dir="${RTi_install.dir}" 
		 includes="**/*Setup.exe" excludes="**/TSTool_RiverTrakExtended*" />
	</move>
	<copy todir="Release/TSTool_RiverTrak/doc" >
		<fileset dir="doc/TSTool/Rivertrak" />
	</copy>
	
	<!-- RiverTrak Extended -->
	<mkdir dir="Release/TSTool_RiverTrakExtended" />
	<mkdir dir="Release/TSTool_RiverTrakExtended/doc" />
	<mkdir dir="Release/TSTool_RiverTrakExtended/installer" />

	<!-- move RiverTrak files and docs -->
	<move todir="Release/TSTool_RiverTrakExtended/installer" >
		<fileset dir="${RTi_install.dir}" 
		 includes="**/TSTool_RiverTrakExtended*" />
	</move>
	<copy todir="Release/TSTool_RiverTrakExtended/doc" >
		<fileset dir="doc/TSTool/Rivertrak" />
	</copy>
	
	<!-- move TestResults and Javadocs -->
	<copy todir="Release/testResults/unit" >
		<fileset dir="${unitTest.dir}/results" 
		 includes="*.xml" />
	</copy>
	<copy todir="Release/testResults/regression" >
		<fileset dir="${regTest.dir}/results" 
		 includes="*" />
	</copy>
	
	<copy todir="Release/javadoc">
	   <fileset dir="${jdoc.dir}"/>
	 </copy>
	
</target>
	
<target name="createUserManual_CDSS"
 description="Merges PDF documentation into dist folder" >
	
	<ant antfile="${ext.dir}/RTiBuild/common-doc.xml"
	 target="mergePDF" >
		<property name="filelist" 
		 value="doc/TSTool/CDSS/UserManual/PDF/filelist.txt" />
	</ant>
	
</target>
	
<target name="createUserManual_Rivertrak"
 description="Merges PDF documentation into dist folder" >
	
	<ant antfile="${ext.dir}/RTiBuild/common-doc.xml"
	 target="mergePDF" >
		<property name="filelist" 
		 value="doc/TSTool/Rivertrak/UserManual/PDF/filelist.txt" />
	</ant>
	
</target>
	
<!-- couple of macros for RTi Linux installation -->
<macrodef name="addRTiFiles" 
 description="Adds the RTi Extended specific install files">
	<sequential>
		<copy todir="tmp/bin" >
			<fileset dir="${ext.dir}/NWSRFS_DMI" excludes="**/*Extended.jar"/>
		</copy>
		<copy todir="tmp/bin" file="scripts/TSTool" />
	</sequential>
</macrodef>
	
<macrodef name="addRTiExtFiles" 
 description="Adds the RTi specific install files" >
	<sequential>
		<copy todir="tmp/bin" >
			<fileset dir="${ext.dir}/NWSRFS_DMI" includes="**/*Extended.jar"/>
		</copy>
		<copy todir="tmp/bin" file="scripts/TSTool_Ext" />
		<move file="tmp/bin/TSTool_Ext" tofile="tmp/bin/TSTool"/>
	</sequential>
</macrodef>
	
<!-- Linux installer targets -->
<target name="installerSetupLinux" depends="clean,jar"
 description="copies TSTool installation files to be packaged">
	
	<mkdir dir="tmp/bin" />
	<copy todir="tmp/bin" >
		<fileset dir="${ext.dir}/RiversideDB_DMI" includes="**/*.jar" />
		<fileset dir="${ext.dir}/StateCU" includes="**/*.jar" />
		<fileset dir="${ext.dir}/StateMod" includes="**/*.jar" />
		<fileset dir="${ext.dir}/TSCommandProcessor" includes="**/*.jar" />
	</copy>
		
	<copy todir="tmp/bin" file="${dist.dir}/${proj_name}_142.jar" />	
	
</target>
	
<target name="createLinuxInstallerCDSS" depends="installerSetupLinux" 
	description="Creates Linux installer for CDSS configuration">
	
	<addRTiFiles />
	
	<ant antfile="${ext.dir}/RTiBuild/common-install.xml"
	 target="createLinuxInstallerCDSS" >
		<property name="mpi.file" 
		 value="${CDSS_install.dir}/${proj_name}.mpi"/>
		<property name="type" value="CDSS"/>
	</ant>
	
</target>

<target name="createLinuxInstallerNWSRFS" depends="installerSetupLinux"
	description="Creates Linux installer for RTi configuration" >
	
	<addRTiFiles />
	
	<ant antfile="${ext.dir}/RTiBuild/common-install.xml"
	 target="createLinuxInstallerCDSS" >
		<property name="mpi.file" 
		 value="${NWSRFS_install.dir}/${proj_name}.mpi"/>
		<property name="type" value="NWSRFS"/>
	</ant>
	
</target>
	
<target name="createLinuxInstallerNWSRFSExt" depends="installerSetupLinux"
	description="Creates Linux installer for RTi configuration" >
	
	<addRTiExtFiles />
	
	<ant antfile="${ext.dir}/RTiBuild/common-install.xml"
	 target="createLinuxInstallerCDSS" >
		<property name="mpi.file" 
		 value="${NWSRFS_install.dir}/${proj_name}_Ext.mpi"/>
		<property name="type" value="NWSRFS"/>
	</ant>
	
</target>
	
<target name="test" depends="compileTest"
	description="runs Junit test suite">

	<junit printsummary="yes" fork="yes" dir="conf">
		<sysproperty key="net.sourceforge.cobertura.datafile"
				file="${buildcob.dir}/cobertura.ser" />
		<formatter type="xml"/>
		<classpath refid="classpath" />
		<classpath refid="cobertura.classpath" />
		<test name="${testSuite}"
		 outfile="test/unit/results/${proj_name}" />
	</junit>
	
</target>
	
<target name="CDSS_runDev" depends="compile"
	description="runs CDSS env. class files">
	
	<runMacro home.dir="${CDSS_OP.dir}" cp.ref="classpath" />
	
</target>

<target name="CDSS_runDevD30" depends="compile"
	description="runs CDSS env. with class files and debug=30">

	<runMacroDebug home.dir="${CDSS_OP.dir}" cp.ref="classpath" />

</target>
	
<target name="CDSS_runOp" depends="jar"
	description="runs CDSS env. with final jar file">
		
	<runMacro home.dir="${CDSS_OP.dir}" cp.ref="classpathOp" />

</target>
	
<target name="CDSS_runOpD30" depends="jar"
	description="runs CDSS env. with final jar file with debug=30">
	
	<runMacroDebug home.dir="${CDSS_OP.dir}" cp.ref="classpathOp" />

</target>

<target name="RTi_runDev" depends="compile"
	description="runs RTi env. using class files">
	
	<runMacro home.dir="${RTi_OP.dir}" cp.ref="classpath" />
	
</target>

<target name="RTi_runDevD30" depends="compile"
	description="runs RTi env. using class files on debug=30">
	
	<runMacroDebug home.dir="${RTi_OP.dir}" cp.ref="classpath" />	

</target>

<target name="RTi_runOp" depends="jar"
	description="runs RTi env. with final jar file">
	
	<runMacro home.dir="${RTi_OP.dir}" cp.ref="classpathOp" />
	
</target>
	
<target name="RTi_runOpD30" depends="jar"
	description="runs RTi env. with final jar file with debug=30">

	<runMacroDebug home.dir="${RTi_OP.dir}" cp.ref="classpathOp" />
	
</target>

<macrodef name="runMacro" description="General method for running product" >
	
	<attribute name="home.dir" />
	<attribute name="cp.ref" />
	<sequential>
		<!-- need to copy graphics files -->
		<copy todir="${buildwork.dir}/DWR/DMI/tstool" >
			<fileset dir="graphics" />
		</copy>
		
		<java classname="${classname}" fork="true">
			<jvmarg value = "-mx256m" />
			<jvmarg value = "-Djava.compiler=NONE" />
			<arg value = "-home" />
			<arg value = "@{home.dir}" />
			<classpath refid = "@{cp.ref}" />   
		</java>	
	</sequential>
	
</macrodef>
	
	
<macrodef name="runMacroDebug" 
 description="General method for running product with debug" >
	
	<attribute name="home.dir" />
	<attribute name="cp.ref" />
	<sequential>
		<!-- need to copy graphics files -->
		<copy todir="${buildwork.dir}/DWR/DMI/tstool" >
			<fileset dir="graphics" />
		</copy>
		
		<java classname="${classname}" fork="true">
			<jvmarg    value = "-mx256m" />
			<jvmarg    value = "-Djava.compiler=NONE" />
			<arg       value = "-home" />
			<arg	   value = "@{home.dir}" />
			<arg		value = "-d" />
			<arg		value = ",30" />
			<classpath refid = "@{cp.ref}" />   
		</java>	
	</sequential>
		
</macrodef>
	
	
<target name="javadoc" 
	description="creates html javadocs from source code">
	
	<!-- cleanup old javadocs -->
	<delete dir="${jdoc.dir}" />

	<!-- make dir jdocs --> 
	<mkdir dir="${jdoc.dir}" />

	<javadoc destdir="${jdoc.dir}" >
		<classpath refid="classpath"/>
		<fileset dir="${src.dir}/${package}" >
    	  		<include name="*.java"/>
    		</fileset>
	</javadoc>	

</target>

	
<!-- creates jar for app -->
<target name="jar" depends="compile" 
	description="jars all class files into jar file in dist dir">
    
	<copy todir="${buildwork.dir}/DWR/DMI/tstool" >
		<fileset dir="graphics" />
	</copy>
	
    <jar jarfile="${dist.dir}/${jarfname}" basedir="${buildwork.dir}" >
	<manifest >
    	<attribute name="Author"    value="Riverside Technology, inc. (RTi)"/>
      	<attribute name="Address1"  value="2290 E. Prospect Road, Suite 1"/>
      	<attribute name="Address2"  value="Fort Collins, CO 80525"/>
        <attribute name="Phone"     value="970-484-7573"/>
	    <attribute name="Web"       value="http://www.riverside.com"/>
	    <attribute name="BuildDate" value="${jarDate}"/>
        <attribute name="Contents"  value="Contains tstool Classes"/>
      </manifest>
    </jar>
	
</target>

	
<target name="regTestAll_CDSS" 
 description="Runs regression tests for all data sets using CDSS config" >
	<addTestsToSet dataset="CDSS_RioGrande" />
	<addTestsToSet dataset="general" />
	<addTestsToSet dataset="Rivertrak"/>
	<addTestsToSet dataset="CDSS_UpperColorado_200701" />
	<antcall target="regTestCDSS" />
</target>
		
<target name="regTestAll_Rivertrak" 
 description="Runs regression tests for all data sets using RTi config" >
	<addTestsToSet dataset="CDSS_RioGrande" />
	<addTestsToSet dataset="general" />
	<addTestsToSet dataset="CDSS"/>
	<antcall target="regTestRivertrak" />
</target>
	
<target name="regTestCDSS" depends="clean,jar,createAppExe_CDSS"
	description="runs CDSS regression tests and outputs 
	results to test/regression/results">
	
	<ant antfile="${ext.dir}/RTiBuild/product-tester.xml" 
		target="regTest">
		<property name="reg_dataset" value="CDSS"/>
		<property name="reg_install.dir" 
			value="${CDSS_install.dir}"/>
		<property name="reg_proj_file" value="${NJProj_Reg}"/>
	</ant>
	
</target>
	
<target name="regTestCDSS_UpperColorado" 
 depends="clean,jar,createAppExe_CDSS"
 description="runs CDSS regression tests and outputs 
	          results to test/regression/results">
	
	<ant antfile="${ext.dir}/RTiBuild/product-tester.xml" 
		target="regTest">
		<property name="reg_dataset" 
			value="CDSS_UpperColorado_200701"/>
		<property name="reg_install.dir" 
			value="${CDSS_install.dir}"/>
		<property name="reg_proj_file" value="${NJProj_Reg}"/>
	</ant>
	
</target>	

<target name="regTestGeneral" depends="clean,jar,createAppExe_CDSS"
	description="runs CDSS regression tests and outputs 
	             results to test/regression/results">
	
	<ant antfile="${ext.dir}/RTiBuild/product-tester.xml" 
	 target="regTest">
		<property name="reg_dataset" value="general"/>
		<property name="reg_install.dir" 
			value="${CDSS_install.dir}"/>
		<property name="reg_proj_file" value="${NJProj_Reg}"/>
	</ant>
		
</target>
	
<target name="regTestRivertrak" depends="clean,jar,createAppExe_RTi" 
	description="runs regression tests and outputs results
	to test/regression/results">
	
	<ant antfile="${ext.dir}/RTiBuild/product-tester.xml" 
	 target="regTest">
		<property name="reg_dataset" value="Rivertrak"/>
		<property name="reg_install.dir" 
			value="${RTi_install.dir}"/>
		<property name="reg_proj_file" value="${NJProj_Reg}"/>
	</ant>
	
</target>
	
<target name="regTestRivertrakExt" depends="clean,jar,createAppExe_RTi"
 description="runs regression tests and outputs results
	          to test/regression/results">

	<ant antfile="${ext.dir}/RTiBuild/product-tester.xml" 
	 target="regTest">
		<property name="reg_dataset" value="Rivertrak"/>
		<property name="reg_install.dir" 
			value="${RTi_install.dir}"/>
		<property name="reg_proj_file" 
			value="${proj_name}_Ext_Regression.njp"/>
	</ant>
	
</target>	
	
<target name="costello" description="Runs the costello editor from Abbot">

	<java dir="." classname="${costello}" fork="true" >
		<jvmarg value="-Djava.compiler=NONE" />
		<classpath refid="classpath" />
	</java>

</target>

<target name="testGUI" depends="compile"
 description="Runs Abbot script files using Junit">

	<!-- compile Abbot Test Suite src  -->
	<javac srcdir="${regTest.dir}/src" destdir="${buildwork.dir}" 
		classpathref="classpath" fork="yes" listfiles="true"
		executable="${executable}" compiler="${compiler}" />
	
	<junit printsummary="yes" dir="." fork="yes" haltonfailure="yes">
		<formatter type="xml"/>	
		<classpath refid="classpath" />
		<test name="${AbbotSuite}" 
		  outfile="test/regression/results/AbbotResults" />
	</junit>
		
</target>
		
<!-- prints out info on targets and properties -->
<target name="help">

	<echo>
		
TARGET         FUNCTION
===========================================================
buildProductTestSetWindows     zips product test set to dist folder

buildProductTestSetLinux     gzips product test set to dist folder
		
compile        compiles source code

compileTest    compiles the test source code

test           runs the unit tests for this product

clean          removes the build directories

CDSS_runDev    runs the application using class files using CDSS env.
		
RTi_runDev     runs the application using class files using RTi env.
		
CDSS_runOp     runs the application from the dist jar file using CDSS env.

RTi_runOp      runs the application from the dist jar file using RTi env.

javadoc        generates javadocs from source code

jar            copies class files into a single jar file in dist    
		
createInstaller        creates an executable installer in the installer dir

regTest        runs a regression test and stores results in regression/results dir
	
help           shows the help for this build file
===========================================================
	
	</echo>

</target>


</project>


